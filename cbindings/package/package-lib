#!/bin/bash
# 
# A script to package the pre-built libqt6pas library into debs, rpms and a tarball
# 	New - rpms and now not build with alien and are also a much higher quality.
#       Tested on, so far, on a amd64 box, there will be issues on arm
#	Resonable lintian and rpmlint result. See end of script !
#
#	    David Bannon 2022-11-25
# NAMING
#	Hard to be sure, no clear definition and varying conventions in use but -
#	ftp.debian.org/debian/pool/main/q/qt6-base - typical...
#	libqt6opengl6-dev_6.4.1-1_armhf.deb
#	libqt6opengl6_6.3.1-1_i386.deb
#	Note that the '6' appears 3 times but in each case refers to the same thing !
#	So, we always have a name including 'qt6' then ending in'6' and then a VerNo starting with '6'
#	And all three '6' are both in main package and -dev package.
#	And the number of the beast shall be 666 .....
#	The actual, binary library file is libQt6OpenGL.so.6.4.1 so the trailing '6' on the name has dissapeared !
# 	So, we will do - 
#		Library, binary libQt6Pas.so.6.2.3
#		Package,        libqt6pas6_6.2.0-1_amd64.deb 
#		Dev Package     libqt6pas6-dev.6.2.0-1_amd64.deb
# 	The '0' in above will be rev'ed by every change Z makes to the interface, the 6.2 is the LTS Qt6 release


PACKVER='1'		# should start at '1', rev if you re-package same binary

LIBNAME=libQt6Pas
PRODUCT="libqt6pas6"	# note lib has upper case letters, this appears in Package name, two sixes but gets another 
CURRENT=`pwd`

	# library will be called something like ./libQt6Pas.so.6.2.3, the package libqt6pas6_6.2.0-1_amd64.deb and libqt6pas6-dev.6.2.0-1_amd64
	cd ..
	LIBFILE=$(find . -maxdepth 1 ! -type l  -name "$LIBNAME""*")
	cd $CURRENT
	MAJORVER=`echo $LIBFILE | awk -F"." '{ printf $4 }'`	# for 6.2.0, = 7
	MINORVER=`echo $LIBFILE | awk -F"." '{ printf $5 }'`	#	     = 2
	EXTRAVER=`echo $LIBFILE | awk -F"." '{ printf $6 }'`	#	     = 0
	VERSION="$MAJORVER"."$MINORVER"."$EXTRAVER"
# echo "Name=""$LIBFILE"", Maj=""$MAJORVER"", Minor=""$MINORVER"", extra=""$EXTRAVER"
# ToDo : really should have some sanity checks here

FULLLIBNAME="$LIBNAME".so."$VERSION"



ARCH=unknown		# we will set further down. amd64  arm64 and armhf, note: arm64 aka aarch64 ? 
DIR_ARCH=unknown
M_ARCH=`uname -m`	# Might return, eg aarch64, x86_64. Raspi running 32bit returns armv7l - possibly RasPi version specific ?

WHOAMI="David Bannon <tomboy-ng@bannons.id.au>"
BUILDDATE=`date -R`

function WriteControl () {
	if [ "$1" = "DEV" ]; then
		echo "Package: $PRODUCT-dev" >> BUILD/DEBIAN/control			
	else
		echo "Package: $PRODUCT" >> BUILD/DEBIAN/control
		# Next line should mention the source package name we don't have one yet.
		# https://www.debian.org/doc/debian-policy/ch-controlfields.html#source
		# echo "Source: CHANGE-ME" >> BUILD/DEBIAN/control
	fi
	echo "Version: ""$MAJORVER"."$MINORVER"."$EXTRAVER" >> BUILD/DEBIAN/control
	echo "Architecture: ""$ARCH" >> BUILD/DEBIAN/control
	echo "Maintainer: $WHOAMI" >> BUILD/DEBIAN/control
	echo "Priority: optional" >> BUILD/DEBIAN/control
	echo "Multi-Arch: same" >> BUILD/DEBIAN/control
	echo "Homepage: https://wiki.freepascal.org/Qt6_Interface" >> BUILD/DEBIAN/control
	# ----- I am not sure if the following is a good idea or not, no, better without, as is replaces old ver, might get new version next
	# echo "Replaces: libqt5pas1" >> BUILD/DEBIAN/control


	SIZE_IN_KB="$(du -s BUILD | awk '{print $1;}')"
	echo "Installed-Size: ${SIZE_IN_KB}" >> BUILD/DEBIAN/control

	if [ "$1" = "DEV" ]; then
		# echo "Installed-Size: 1445" >> BUILD/DEBIAN/control
		echo "Depends: $PRODUCT (>= $MINORVER"."$EXTRAVER), qt6-base-dev" >> BUILD/DEBIAN/control
		echo "Section: libdevel" >> BUILD/DEBIAN/control
		echo "Description: Development files for Qt6Pas" >> BUILD/DEBIAN/control
	else

		# echo "Installed-Size: 3314" >> BUILD/DEBIAN/control
		echo "Depends: libc6 (>= 2.34), libgcc1 (>= 11.3), libqt6core6 (>= 6.2.3), libqt6gui6 (>= 6.2.3), libqt6printsupport6 (>= 6.2.3), libqt6widgets6 (>= 6.2.3), libstdc++6 (>= 5), qt6-qpa-plugins" >> BUILD/DEBIAN/control
		echo "Section: libs" >> BUILD/DEBIAN/control
		echo "Description: Qt6 interface bindings for Pascal" >> BUILD/DEBIAN/control
	fi
	echo " Provides interface for Pascal applications, is only" >> BUILD/DEBIAN/control
	echo " a temp hack until distributions catch up. It is" >> BUILD/DEBIAN/control
	echo " only really useful, at present, to people using"   >> BUILD/DEBIAN/control
	echo " Lazarus main, current release versions do not need it." >> BUILD/DEBIAN/control
}


function DebianPackage () {
	# We build a debian tree in BUILD and call dpkg-deb -b 
	rm -rf BUILD
	mkdir -p BUILD/DEBIAN
	mkdir -p BUILD/usr/lib/"$DIR_ARCH"
	mkdir -p BUILD/usr/share/doc/"$PRODUCT"
	WriteControl
	cp ../"$FULLLIBNAME" BUILD/usr/lib/"$DIR_ARCH"/.
	ln -s -r BUILD/usr/lib/"$DIR_ARCH"/"$FULLLIBNAME" BUILD/usr/lib/"$DIR_ARCH"/"$LIBNAME".so."$MAJORVER"."$MINORVER"
	ln -s -r BUILD/usr/lib/"$DIR_ARCH"/"$FULLLIBNAME" BUILD/usr/lib/"$DIR_ARCH"/"$LIBNAME".so."$MAJORVER"
	# Don't link to base name, Lintian objects 'cos thats the -dev package's job
	chmod 0644 BUILD/usr/lib/"$DIR_ARCH"/*
	
    	cp copyright "BUILD/usr/share/doc/$PRODUCT/copyright"
	
	echo "activate-noawait ldconfig" > BUILD/DEBIAN/triggers
	echo "libQt6Pas $MAJORVER libqt6pas$MAJORVER" > BUILD/DEBIAN/shlibs
	
	rm changelog.dch
	dch -cchangelog -v "$MAJORVER"."$MINORVER"."$EXTRAVER" -D"unstable" "Release of new version."   
	if [ -f whatsnew ]; then
	   	echo "---------- Including whatsnew in changelog"
	   	while IFS= read -r Line; do
		dch -cchangelog --append "$Line"
	   	done < whatsnew
	fi
	dch -cchangelog --append "Please see Lazarus at gitlab for further change details."
	
	
	
	
	gzip -knc --best changelog >> BUILD/usr/share/doc/"$PRODUCT"/changelog.gz
	# ------ Make the md5sum file -----------
	cd BUILD
	md5sum  usr/lib/"$DIR_ARCH"/"$LIBNAME".so."$VERSION" > DEBIAN/md5sums
	md5sum  usr/share/doc/"$PRODUCT"/copyright >> DEBIAN/md5sums
	md5sum  usr/share/doc/"$PRODUCT"/changelog.gz >> DEBIAN/md5sums
	cd ..
	chmod -R g-w BUILD
  	fakeroot dpkg-deb -b BUILD/. "$PRODUCT"_"$VERSION"-"$PACKVER"_"$ARCH".deb
}

function DebianPackageDev () {
	# We build a debian tree in BUILD and call dpkg-deb -b 
	rm -rf BUILD
	mkdir -p BUILD/DEBIAN
	mkdir -p BUILD/usr/lib/"$DIR_ARCH"
	mkdir -p BUILD/usr/share/pascal/qt6
	mkdir -p BUILD/usr/share/doc/"$PRODUCT"-dev
	WriteControl DEV
	ln -s -r BUILD/usr/lib/"$DIR_ARCH"/"$LIBNAME".so."$VERSION" BUILD/usr/lib/"$DIR_ARCH"/"$LIBNAME".so
	cp ../qt6.pas BUILD/usr/share/pascal/qt6/.
	cp ../qt62.pas BUILD/usr/share/pascal/qt6/.
	chmod 0644 BUILD/usr/share/pascal/qt6/*
    	cp copyright BUILD/usr/share/doc/"$PRODUCT-dev"/copyright
	gzip -knc --best changelog >> BUILD/usr/share/doc/"$PRODUCT-dev"/changelog.gz
 
	# ------ Make the md5sum file -----------
	cd BUILD
	md5sum  "usr/share/pascal/qt6/qt6.pas" > DEBIAN/md5sums
	md5sum  "usr/share/pascal/qt6/qt62.pas" >> DEBIAN/md5sums
	md5sum  usr/share/doc/"$PRODUCT"-dev/copyright >> DEBIAN/md5sums
	md5sum  usr/share/doc/"$PRODUCT"-dev/changelog.gz >> DEBIAN/md5sums
	cd ..
	chmod -R g-w BUILD
  	fakeroot dpkg-deb -b BUILD/. "$PRODUCT"-dev_"$VERSION"-"$PACKVER"_"$ARCH".deb
}

# A lot more work is required for this to work even on non amd64 hardware.
# Paricularly where the library is suposed to end up !
#

# We want a dir name like this - libqt6pas6-2.2

function MakeRPM () {
	# PARTVER="$MAJORVER"."$MINORVER"."$EXTRAVER"
	FULLVER="$VERSION"-"$PACKVER"
        RDIR="$PRODUCT"-"$VERSION"
        echo "=== Making RPM from $PRODUCT"."$FULLVER"_"$ARCH.deb in $RDIR ==="
        rm -Rf "$RDIR"
	mkdir -p "$RDIR"/usr/"$RDIR_ARCH"
	chmod 744 "$RDIR"/usr/"$RDIR_ARCH"
	# mkdir -p "$RDIR"/usr/lib
	if [ "$1" = "devel" ]; then		# DEV Package
		echo "========= RPM Devel Package ========"
		mkdir -p "$RDIR"/usr/share/doc/"$PRODUCT"-devel
		chmod 755 "$RDIR"/usr/share/doc/"$PRODUCT"-devel
    		cp copyright "$RDIR"/usr/share/doc/"$PRODUCT"-devel/copyright
		gzip -knc --best changelog >> "$RDIR"/usr/share/doc/"$PRODUCT"-devel/changelog.gz

		cd "$RDIR"/usr/"$RDIR_ARCH"
		ln -s "$FULLLIBNAME" "$LIBNAME".so
		cd "$CURRENT"

		# ln -s "$RDIR"/usr/"$RDIR_ARCH"/"$FULLLIBNAME" "$RDIR"/usr/"$RDIR_ARCH"/"$LIBNAME".so
    		cp ../qt6.pas "$RDIR/usr/share/doc/"$PRODUCT"-devel/."
    		cp ../qt62.pas "$RDIR/usr/share/doc/"$PRODUCT"-devel/."
		cp libqt6pas-devel.spec "$RDIR"/"$PRODUCT".spec
		sed -i "s/INSERT_DEPEND/${PRODUCT} = ${VERSION}, qt6-qtbase-devel >= 6.2.3/" "$RDIR"/"$PRODUCT".spec
	else	
		echo "========= RPM Lib Package =========="
		mkdir -p "$RDIR"/usr/share/doc/"$PRODUCT"
		chmod 755 "$RDIR"/usr/share/doc/"$PRODUCT"
    		cp copyright "$RDIR/usr/share/doc/"$PRODUCT"/copyright"
		gzip -knc --best changelog >> "$RDIR"/usr/share/doc/"$PRODUCT"/changelog.gz
		cp ../"$FULLLIBNAME" "$RDIR"/usr/"$RDIR_ARCH"/.
		chmod 755 "$RDIR"/usr/"$RDIR_ARCH"/"$FULLLIBNAME"
		ln -s -r "$RDIR"/usr/"$RDIR_ARCH"/"$FULLLIBNAME" "$RDIR"/usr/"$RDIR_ARCH"/"$LIBNAME".so."$MAJORVER"."$MINORVER"
		ln -s -r "$RDIR"/usr/"$RDIR_ARCH"/"$FULLLIBNAME" "$RDIR"/usr/"$RDIR_ARCH"/"$LIBNAME".so."$MAJORVER"
		cp libqt6pas6.spec "$RDIR"/"$PRODUCT".spec
	fi
	sed -i "s/^Version:*./Version: ${VERSION}/" "$RDIR"/"$PRODUCT".spec
	sed -i "s/^Release:*./Release: ${PACKVER}/" "$RDIR"/"$PRODUCT".spec
	sed -i "s/INSERT_FULL_VER/Version: ${FULLVER}/" "$RDIR"/"$PRODUCT".spec
	sed -i "s/INSERT_VERSION/${VERSION}/" "$RDIR"/"$PRODUCT".spec
	cp -f "$RDIR"/"$PRODUCT".spec "$PRODUCT""$1".spec-just-used
	cd "$RDIR"
	fakeroot rpmbuild --target "$M_ARCH" --buildroot "$CURRENT"/"$RDIR" -bb "$PRODUCT".spec
	cd .. 
}


if [ "$M_ARCH" == "aarch64" ]; then
	ARCH="arm64"			# Name used in deb file name
	DIR_ARCH="aarch64-linux-gnu"	# Dir where the libraries end up
	RDIR_ARCH="lib64"		# Where RPMs put the library         TODO !!!
fi
if [ "$M_ARCH" == "armv7l" ]; then
	ARCH="armhf"
	DIR_ARCH="arm-linux-gnueabihf"
	RDIR_ARCH="lib"		# Where RPMs put the library         TODO !!!
fi
if [ "$M_ARCH" == "x86_64" ]; then
	ARCH="amd64"
	DIR_ARCH="x86_64-linux-gnu"
	RDIR_ARCH="lib64"		# Where RPMs put the library 
fi
if [ "$ARCH" == "unknown" ]; then
	echo "ERROR cannot id your arch $DIR_ARCH, exiting..."
	exit
fi

echo "Building for $ARCH to go into $DIR_ARCH - Maj=""$MAJORVER"", Min=""$MINORVER"", EXTRA=""$EXTRAVER"

rm -f *.deb *.rpm *.gz
strip --remove-section=.comment ../libQt6Pas.so."$VERSION"

DebianPackage 
DebianPackageDev
echo " ====== Finished Building Debs ======="
MakeRPM   
MakeRPM "devel"       

TARNAME=libqt6pas_"$MAJORVER"_"$MINORVER"_"$EXTRAVER"-"$PACKVER"_"$ARCH"
rm -Rf "$TARNAME"
mkdir "$TARNAME"
cp ../targz.readme "$TARNAME"/.
cp ../libQt6Pas.so."$VERSION" "$TARNAME"/.
tar czf "$TARNAME".tar.gz "$TARNAME"
rm -Rf "$TARNAME"
rm -Rf BUILD
ls -ltr

echo "Davo - use long pass phrase !"
for i in `ls -b *.rpm`; do rpm --addsign "$i"; echo "signed $i"; done

echo " ======================== Debian Lintian =============================="
lintian -IiE *.deb

echo "========================= RPM Lint Results ============================"
rpmlint -v *.rpm

#echo " === OK, now make the rpms with   fakeroot bash ./rpm-package.bash   <enter> ==="


# --------------- RPM LINT Issues ------------------------------
# https://github.com/rpm-software-management/rpmlint/rpmlint/checks
# libqt6pas6.x86_64: E: unknown-key e2617741   means the public key is not imported into my rpm dbase.             
# libqt6pas6.x86_64: W: invalid-license LGPLv2                    What can I say ?
# libqt6pas6-devel.x86_64: E: no-binary        No, of course not, its a dev package !
# no-binary ?
#    Rpmlint thinks it should be "noarch" because there is no binary but 
#    it provides a symlink, in an appropriate binary dir, to a binary !

# --------------- Lintian Issues ---------------------------------

# No-Symbol-control-file
#    Yeah, no symbol control file.

# No-hardening
#    Personally, I don't thing hardening is needed in the sort of apps
#    likely to be working with this library but I am happy to hear any
#    other opinions on this matter. Its easy to do but a bit slower.
#    And its really a decision for the Lazarus Qt6 developer.

